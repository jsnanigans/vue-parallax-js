var ParallaxJS=function(t){this.os=t};ParallaxJS.prototype={items:[],active:!0,tProp:window.transformProp||function(){var t=document.createElement("div");if(null==t.style.transform){var e=["Webkit","Moz","ms"],i="Transform",a=!0,n=!1,r=void 0;try{for(var o,s=e[Symbol.iterator]();!(a=(o=s.next()).done);a=!0){var l=o.value;if(void 0!==t.style[l+i])return l+i}}catch(t){n=!0,r=t}finally{try{!a&&s.return&&s.return()}finally{if(n)throw r}}}return"transform"}(),add:function(t,e){var i=e.value,a=e.arg,n=t.currentStyle||window.getComputedStyle(t),r=e.modifiers;if("none"!==n.display){var o=r.absY?window.innerHeight:t.clientHeight||t.scrollHeight;t.classList.add(this.os.className||""),this.items.push({el:t,iOT:t.offsetTop+t.offsetParent.offsetTop-parseInt(n.marginTop),style:n,value:i,arg:a,mod:r,height:o,count:0})}},move:function(){var t=this;if(this.active)if(window.innerWidth<this.os.minWidth)this.items.forEach(function(e){e.el.style[t.tProp]=""});else{var e=window.scrollY||window.pageYOffset,i=window.innerHeight;this.items.forEach(function(a){var n=a.height,r=-1*a.iOT*a.value,o=(e+i-n/2-i/2)*a.value+r;window.requestAnimationFrame(function(){var e="translate3d("+(a.mod.centerX?"-50%":"0px")+","+o.toFixed(3)+"px,0px)";a.el.style[t.tProp]=e})})}}};var vueParallaxJs={install:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=new ParallaxJS(e);window.addEventListener("scroll",function(){i.move(i)},{passive:!0}),window.addEventListener("resize",function(){i.move(i)},{passive:!0}),t.prototype.$parallaxjs=i,window.$parallaxjs=i,t.directive("parallax",{bind:function(t,e){},inserted:function(t,e){i.add(t,e),i.move(i)}})}};export default vueParallaxJs;
